# .github/workflows/docker-publish.yml
name: Train, Build and Push Docker Image

env:
  DOCKER_IMAGE: phungdat020501/datpt_mse
  # Đặt tên artifact để lưu model (thư mục models)
  MODEL_ARTIFACT_FOLDER: models
  MODEL_ARTIFACT_NAME: model-artifact

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job 1: Train model và upload artifact
  train:
    name: Train Model and Upload Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Đặt phiên bản Python của bạn

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Training
        # Đảm bảo config.py trong repo được cấu hình đúng MODEL_TYPE bạn muốn
        # Hoặc override bằng biến env nếu config.py đọc env var
        # env:
        #   MODEL_TYPE: XGBClassifier
        run: |
          echo "Running training script..."
          python src/train.py
          echo "Training finished. Checking for model file..."
          ls -l ${{ env.MODEL_ARTIFACT_FOLDER }}/ # Kiểm tra xem file .pkl có được tạo không

      - name: Upload Model Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }} # Tên artifact
          path: ${{ env.MODEL_ARTIFACT_FOLDER }} # Upload toàn bộ thư mục models
          if-no-files-found: error # Báo lỗi nếu không tìm thấy thư mục/file models

  # Job 2: Build và Push Docker Image (chứa model)
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: train # Phải chạy sau khi job 'train' hoàn thành thành công

    steps:
      - name: Check out code
        # Checkout code để lấy Dockerfile và src
        uses: actions/checkout@v4

      - name: Download Model Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }} # Tên artifact khớp với lúc upload
          # Tải về thư mục gốc của workspace, nó sẽ tự tạo lại thư mục 'models'
          path: .

      - name: Verify downloaded model artifact
        run: |
          echo "Checking downloaded artifact..."
          ls -lR ${{ env.MODEL_ARTIFACT_FOLDER }}/ # Kiểm tra nội dung thư mục models đã tải về

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context là thư mục gốc (đã chứa 'models' được tải về)
          push: true # Build và push luôn trong step này
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          # Dockerfile sẽ tự động COPY ./models vào image